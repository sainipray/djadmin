# Generated by Django 2.2.5 on 2019-12-09 10:13

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('sessions', '0001_initial'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='DjadminField',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Field Name')),
                ('type', models.CharField(max_length=30, verbose_name='Field Type')),
                ('model', models.CharField(max_length=50, verbose_name='Model Name')),
                ('depth', models.IntegerField(verbose_name='Field Depth')),
                ('foreignkey_model', models.CharField(blank=True, max_length=50, null=True, verbose_name='Foreign Key Model Name')),
            ],
            options={
                'verbose_name': 'Djadmin Field',
                'verbose_name_plural': 'Djadmin Fields',
                'db_table': 'djadmin_field',
            },
        ),
        migrations.CreateModel(
            name='Visitor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(max_length=255, null=True, verbose_name='City')),
                ('state', models.CharField(max_length=50, null=True, verbose_name='State')),
                ('country', models.CharField(max_length=50, null=True, verbose_name='Country')),
                ('visit_datetime', models.DateTimeField(auto_now=True, verbose_name='Login Date Time')),
                ('browser', models.CharField(max_length=30, null=True, verbose_name='Browser')),
                ('browser_version', models.CharField(max_length=20, null=True, verbose_name='Browser Version')),
                ('ipaddress', models.CharField(max_length=20, null=True, verbose_name='IP Address')),
                ('os_info', models.CharField(max_length=30, null=True, verbose_name='OS Information')),
                ('os_info_version', models.CharField(max_length=20, null=True, verbose_name='OS Version')),
                ('device_type', models.CharField(max_length=20, null=True, verbose_name='Device Type')),
                ('device_name', models.CharField(max_length=20, null=True, verbose_name='Device Name')),
                ('device_name_brand', models.CharField(max_length=20, null=True, verbose_name='Device Brand Name')),
                ('device_name_model', models.CharField(max_length=20, null=True, verbose_name='Device Model Name')),
                ('unique_computer_processor', models.CharField(max_length=255, null=True, verbose_name='Computer Processor')),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=9, null=True, verbose_name='Latitude')),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=9, null=True, verbose_name='Longitude')),
                ('http_referer', models.URLField(blank=True, null=True, verbose_name='HTTP_REFERER URL')),
                ('request_url', models.URLField(null=True, verbose_name='Request URL')),
                ('name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
                ('session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sessions.Session', verbose_name='Session')),
            ],
            options={
                'verbose_name': 'visitor',
                'verbose_name_plural': 'visitors',
                'ordering': ['visit_datetime'],
            },
        ),
        migrations.CreateModel(
            name='Sortable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_array', models.TextField(verbose_name='Model Sortable Array')),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType', verbose_name='Model')),
            ],
            options={
                'verbose_name': 'Sortable Model',
                'verbose_name_plural': 'Sortable Models',
            },
        ),
        migrations.CreateModel(
            name='DjadminModelSetting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(max_length=50, verbose_name='Model Name')),
                ('app_label', models.CharField(max_length=50, verbose_name='Model App Label Name')),
                ('list_per_page', models.IntegerField(blank=True, help_text='Set list_per_page to control how many items appear on each paginated admin change list page.', null=True, verbose_name='List Per Page')),
                ('list_max_show_all', models.IntegerField(blank=True, help_text="Set list_max_show_all to control how many items can appear on a 'Show all' admin change list page.", null=True, verbose_name='List Max Show All')),
                ('actions_on_top', models.BooleanField(default=True, help_text='Controls where on the page the actions bar appears', verbose_name='Actions on Top')),
                ('actions_on_bottom', models.BooleanField(default=False, verbose_name='Actions on Bottom')),
                ('has_add_permission', models.BooleanField(default=True, verbose_name='Has Add Permission?')),
                ('has_change_permission', models.BooleanField(default=True, verbose_name='Has Change Permission?')),
                ('has_delete_permission', models.BooleanField(default=True, verbose_name='Has Delete Permission?')),
                ('date_hierarchy', models.ForeignKey(blank=True, help_text='Set date_hierarchy to the name of a DateField or DateTimeField in your model, and the change list page will include a date-based drilldown navigation by that field.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='date_hierarchy', to='djadmin.DjadminField', verbose_name='Date Hierarchy')),
                ('list_display', models.ManyToManyField(blank=True, help_text='Set list_display to control which fields are displayed on the change list page of the admin.', related_name='list_display', to='djadmin.DjadminField', verbose_name='List Display')),
                ('list_display_links', models.ManyToManyField(blank=True, help_text='Use list_display_links to control if and which fields in list_display should be linked to the change list page for an object.', related_name='list_display_links', to='djadmin.DjadminField', verbose_name='List Display Link')),
                ('list_editable', models.ManyToManyField(blank=True, help_text='Set list_editable to a list of field names on the model which will allow editing on the change list page.', related_name='list_editable', to='djadmin.DjadminField', verbose_name='List Editable')),
                ('list_filter', models.ManyToManyField(blank=True, help_text='Set list_filter to activate filters in the right sidebar of the change list page of the admin', related_name='list_filter', to='djadmin.DjadminField', verbose_name='List Filter')),
                ('search_fields', models.ManyToManyField(blank=True, help_text='Set search_fields to enable a search box on the admin change list page.', related_name='search_fields', to='djadmin.DjadminField', verbose_name='Search Fields')),
            ],
            options={
                'verbose_name': 'Djadmin Model Setting',
                'verbose_name_plural': 'Djadmin Model Settings',
                'db_table': 'djadmin_model_setting',
                'ordering': ['model'],
            },
        ),
        migrations.CreateModel(
            name='DjadminCard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name of Card')),
                ('html', models.TextField(verbose_name='HTML Code')),
                ('location', models.SmallIntegerField(choices=[(0, 'LIST PAGE'), (1, 'FORM PAGE')], help_text='It will help to show this card on selected location for this model', verbose_name='Select Location')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='djadmin.DjadminModelSetting')),
            ],
            options={
                'verbose_name': 'Djadmin Card',
                'verbose_name_plural': 'Djadmin Cards',
                'ordering': ['date_created'],
            },
        ),
    ]
